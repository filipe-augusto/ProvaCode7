// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoCallCenter.Server;

namespace ProjetoCallCenter.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15");

            modelBuilder.Entity("ProjetoCallCenter.Shared.CategoriaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("Descricao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CategoriaProduto");
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Credito")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEndereco")
                        .HasColumnName("id_endereco")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("IdStatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco")
                        .IsUnique();

                    b.HasIndex("IdStatus");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.ProdutoOfertadoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DiaDaOferta")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProduto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdRegistroAtendimento")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdRegistroAtendimento");

                    b.ToTable("ProdutoOfertadoCliente");
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.RegistroAtendimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeDaMaquinaOuIP")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("RegistroAtendimentos");
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.StatusCliente", b =>
                {
                    b.Property<byte>("IdStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsContabilizaVenda")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFinalizaCliente")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdStatus");

                    b.ToTable("StatusCliente");
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.Cliente", b =>
                {
                    b.HasOne("ProjetoCallCenter.Shared.Endereco", "Endereco")
                        .WithOne("Cliente")
                        .HasForeignKey("ProjetoCallCenter.Shared.Cliente", "IdEndereco")
                        .HasConstraintName("ForeignKey_Cliente_Endereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCallCenter.Shared.StatusCliente", "StatusCliente")
                        .WithMany("Clientes")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("ForeignKey_Cliente_StatusCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.Produto", b =>
                {
                    b.HasOne("ProjetoCallCenter.Shared.CategoriaProduto", "CategoriaProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("ForeignKey_Produto_CategoriaProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.ProdutoOfertadoCliente", b =>
                {
                    b.HasOne("ProjetoCallCenter.Shared.Cliente", "Cliente")
                        .WithMany("ProdutoOfertadoCliente")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("ForeignKey_ProdutoOfertadoCliente_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCallCenter.Shared.Produto", "Produto")
                        .WithMany("ProdutoOfertadoCliente")
                        .HasForeignKey("IdProduto")
                        .HasConstraintName("ForeignKey_ProdutoOfertadoCliente_Produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoCallCenter.Shared.RegistroAtendimentos", "RegistroAtendimentos")
                        .WithMany("ProdutoOfertadoCliente")
                        .HasForeignKey("IdRegistroAtendimento")
                        .HasConstraintName("ForeignKey_ProdutoOfertadoCliente_RegistroAtendimentos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoCallCenter.Shared.RegistroAtendimentos", b =>
                {
                    b.HasOne("ProjetoCallCenter.Shared.Cliente", "Cliente")
                        .WithMany("RegistroAtendimentos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("ForeignKey_RegistroAtendimentoso_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
